name: "Test"

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

env:
  GO_VERSION: stable

jobs:
  go-test-coverage:
    name: "Go Test Coverage"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: go version

      - name: Generate test coverage
        run: go test ./... -coverprofile=./cover.out -covermode=atomic -coverpkg=./...

      - name: download ubuntu-latest-profile
        uses: actions/download-artifact@v5
        with:
          name: ubuntu-latest-profile
      - name: download macos-latest-profile
        uses: actions/download-artifact@v5
        with:
          name: macos-latest-profile
      - name: download windows-latest-profile
        uses: actions/download-artifact@v5
        with:
          name: windows-latest-profile

      - name: download artifact (main.breakdown)
        id: download-main-breakdown
        uses: actions/download-artifact@v5
        with:
          name: main.breakdown

      - name: Display structure of downloaded files
        run: ls -R

      - name: Check test coverage
        id: coverage
        uses: vladopajic/go-test-coverage@v2
        continue-on-error: true # Should fail after coverage comment is posted
        with:
          config: ./.testcoverage.yaml
          profile: ubuntu-latest-profile,macos-latest-profile,windows-latest-profile

          # Save current coverage breakdown if current branch is main. It will be
          # uploaded as artifact in step below.
          breakdown-file-name: ${{ github.ref_name == 'main' && 'main.breakdown' || '' }}

          # If this is not main brach we want to show report including
          # file coverage difference from main branch.
          diff-base-breakdown-file-name: ${{ steps.download-main-breakdown.outputs.found_artifact == 'true' && 'main.breakdown' || '' }}

      - name: Upload artifact (main.breakdown)
        uses: actions/upload-artifact@v4
        if: github.ref_name == 'main'
        with:
          name: main.breakdown
          path: main.breakdown # as specified via `breakdown-file-name`
          if-no-files-found: error

      - name: Post coverage report
        if: github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-tag: coverage-report
          pr-number: ${{ github.event.number }}
          message: |
            Go Test Coverage Report:
            ```
            ${{ fromJSON(steps.coverage.outputs.report) }}
            ```

      - name: "Finally check coverage"
        if: steps.coverage.outcome == 'failure'
        shell: bash
        run: echo "coverage check failed" && exit 1
